{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","e","dateSelected","target","ExpenseDate","date","month","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","expenseContent","filteredExpenses","length","map","item","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpenseChart","expenses","chartDataPoints","expense","getMonth","Expenses","useState","filteredYear","setfilteredYear","filter","toString","console","log","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","enteredExpenses","Date","onSaveExpenseData","htmlFor","type","name","required","min","step","onClick","showForm","NewExpense","setShowForm","showFormHandler","enteredExpenseData","expenseData","random","onAddNewExpenses","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d07bbb2e.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nexport const Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n","import \"./ExpenseFilter.css\";\r\n\r\nexport const ExpenseFilter = (props) => {\r\n  const dateChangeHandler = (e) => {\r\n    props.dateSelected(e.target.value);\r\n\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expense-filter\">\r\n      <div className=\"expense-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dateChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./ExpenseDate.css\";\r\n\r\nexport const ExpenseDate = ({ date }) => {\r\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = date.getFullYear();\r\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { ExpenseDate } from \"./ExpenseDate\";\r\nimport { Card } from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nexport const ExpenseItem = ({ date, title, amount }) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">${amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n","import \"./ExpensesList.css\";\r\nimport { ExpenseItem } from \"./ExpenseItem\";\r\n\r\nexport const ExpensesList = (props) => {\r\n  let expenseContent = <p>No Expenses Found.</p>;\r\n\r\n  if (props.filteredExpenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">{expenseContent}</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.filteredExpenses.map((item) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={item.id}\r\n            title={item.title}\r\n            amount={item.amount}\r\n            date={item.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import \"./ChartBar.css\";\r\n\r\nexport const ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./Chart.css\";\r\nimport { ChartBar } from \"./ChartBar\";\r\n\r\nexport const Chart = ({ dataPoints }) => {\r\n  const dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { Chart } from \"../Chart/Chart\";\r\n\r\nexport const ExpenseChart = ({ expenses }) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Chart dataPoints={chartDataPoints} />\r\n    </div>\r\n  );\r\n};\r\n","import \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\nimport { Card } from \"../UI/Card\";\r\nimport { ExpenseFilter } from \"./ExpenseFilter\";\r\nimport { ExpensesList } from \"./ExpensesList\";\r\nimport { ExpenseChart } from \"./ExpenseChart\";\r\n\r\nexport const Expenses = (props) => {\r\n  const [filteredYear, setfilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (year) => {\r\n    setfilteredYear(year);\r\n    console.log(props.expenses);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    const expenseYear = expense.date.getFullYear().toString();\r\n    return expenseYear === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        dateSelected={filterChangeHandler}\r\n      />\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <ExpensesList filteredExpenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nexport const ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const enteredExpenses = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(enteredExpenses);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.showForm}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { ExpenseForm } from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nexport const NewExpense = (props) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddNewExpenses(expenseData);\r\n    // Hide Form after submitting\r\n    setShowForm(false);\r\n    console.log(expenseData);\r\n  };\r\n\r\n  const showFormHandler = () => {\r\n    // Toggle form for Add New Expense and Cancel button's\r\n    !showForm ? setShowForm(true) : setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!showForm && <button onClick={showFormHandler}>Add New Expense</button>}\r\n      {showForm && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          showForm={showFormHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\nimport { Expenses } from \"./components/Expenses/Expenses\";\nimport { NewExpense } from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddNewExpenses={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}